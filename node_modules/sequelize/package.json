{
  "_args": [
    [
      {
        "raw": "sequelize",
        "scope": null,
        "escapedName": "sequelize",
        "name": "sequelize",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "D:\\coding_blocks\\shopping_cart"
    ]
  ],
  "_from": "sequelize",
  "_hasShrinkwrap": false,
  "_id": "sequelize@6.3.4",
  "_location": "/sequelize",
  "_nodeVersion": "10.22.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/sequelize_6.3.4_1596325064197_0.9631111977999318"
  },
  "_npmUser": {
    "name": "sushantdhiman",
    "email": "sushantdhiman@outlook.com"
  },
  "_npmVersion": "6.14.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sequelize",
    "scope": null,
    "escapedName": "sequelize",
    "name": "sequelize",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/sequelize/-/sequelize-6.3.4.tgz",
  "_shasum": "dd6f4801ba5e4d7a6f845a5ad3e616f24453694f",
  "_shrinkwrap": null,
  "_spec": "sequelize",
  "_where": "D:\\coding_blocks\\shopping_cart",
  "bugs": {
    "url": "https://github.com/sequelize/sequelize/issues"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-angular"
    ]
  },
  "dependencies": {
    "debug": "^4.1.1",
    "dottie": "^2.0.0",
    "inflection": "1.12.0",
    "lodash": "^4.17.15",
    "moment": "^2.26.0",
    "moment-timezone": "^0.5.31",
    "retry-as-promised": "^3.2.0",
    "semver": "^7.3.2",
    "sequelize-pool": "^6.0.0",
    "toposort-class": "^1.0.1",
    "uuid": "^8.1.0",
    "validator": "^10.11.0",
    "wkx": "^0.5.0"
  },
  "description": "Multi dialect ORM for Node.JS",
  "devDependencies": {
    "@commitlint/cli": "^8.3.5",
    "@commitlint/config-angular": "^8.3.4",
    "@types/node": "^12.12.42",
    "@types/validator": "^10.11.0",
    "acorn": "^7.2.0",
    "chai": "^4.x",
    "chai-as-promised": "^7.x",
    "chai-datetime": "^1.6.0",
    "cheerio": "^1.0.0-rc.3",
    "cls-hooked": "^4.2.2",
    "cross-env": "^7.0.2",
    "delay": "^4.3.0",
    "dtslint": "^3.6.4",
    "env-cmd": "^10.1.0",
    "esdoc": "^1.1.0",
    "esdoc-ecmascript-proposal-plugin": "^1.0.0",
    "esdoc-inject-style-plugin": "^1.0.0",
    "esdoc-standard-plugin": "^1.0.0",
    "eslint": "^6.8.0",
    "eslint-plugin-jsdoc": "^20.4.0",
    "eslint-plugin-mocha": "^6.2.2",
    "fs-jetpack": "^2.4.0",
    "husky": "^4.2.5",
    "js-combinatorics": "^0.5.5",
    "lcov-result-merger": "^3.0.0",
    "lint-staged": "^10.2.6",
    "mariadb": "^2.3.1",
    "markdownlint-cli": "^0.23.1",
    "marked": "^1.1.0",
    "mocha": "^7.1.2",
    "mysql2": "^2.1.0",
    "nyc": "^15.0.0",
    "p-map": "^4.0.0",
    "p-props": "^4.0.0",
    "p-timeout": "^3.2.0",
    "pg": "^8.2.1",
    "pg-hstore": "^2.x",
    "rimraf": "^3.0.2",
    "semantic-release": "^17.0.7",
    "sinon": "^9.0.2",
    "sinon-chai": "^3.3.0",
    "sqlite3": "^4.2.0",
    "tedious": "8.3.0",
    "typescript": "^3.9.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-W6Y96N5QHTgEz5Q37v2GYbKufSXaw0b3v4rCLTPbcCMfIG0MHI42Ozp7IwiyV9bdNkfFEdY7XP8R6lWrWg4hUw==",
    "shasum": "dd6f4801ba5e4d7a6f845a5ad3e616f24453694f",
    "tarball": "https://registry.npmjs.org/sequelize/-/sequelize-6.3.4.tgz",
    "fileCount": 125,
    "unpackedSize": 1143959,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfJfzICRA9TVsSAnZWagAAqPsP/1cHmRoFZfJfbvRlpMun\nvCZ45hfjex21sQ/VW1sOrKlNTnoK1vc4tpQH8SbOBD2nmV9OTG0OgHtxl4LN\nvVUibpzVk9o9R9XPEODX7mTSXfmU6dTV6aCHIAmHbfxxh0nPbSIVOFMcimDC\nT/Gfzz8JlKvWcAVAsljZ/KHOANsA+ADkxuRkvWtpP3WmPcfGadADhlrVVlz1\ndrsMzI5rQnQDzIfHfTB641N+kFIiDHGy932uTalnewyXdFBHt+X4zWZWS8hQ\npqW3RKkR6+1amvZSjXLi4UDw1OwLQYQGu7xXKaqo/ydDsA3/R7W/ma0/PdZD\naXG4kSF/6tPs2iwzkJlFr0atfRmPjkLiCxbsUK8bAC6jU5ew/SbD8CHyl2FE\nJtYOOLtcXp9ZoV6YawpzGbHy808ocds4xshogke9L5hP06GpU43AZm0u1AOJ\n9I25spN4TSVkVoCgOIeh++7fP5pUOUV94WwDjdq0qRVqGWVWaR0H+AQHt0UT\nyQp+nBkmokb/TdSotOliUmEg5LnyoLx+aFAj6bdkZCbVJ+4USRF4EaCjNLhI\nzl37uAp8fhruDlvbZKKCid4txC7Qo/zN6c6xanqpr7oy6Jgr/o8hSF+sIpuL\nAqwforIhXOMAiy3gHhY8cUiv8uihYOeBN3WC6wv9bqCbbJM0oX0oucjPumBh\nMI56\r\n=Ab4o\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=10.0.0"
  },
  "files": [
    "lib",
    "types/index.d.ts",
    "types/lib",
    "types/type-helpers"
  ],
  "gitHead": "490db410e33241158f7d8a7cdeffbf3766af731c",
  "homepage": "https://sequelize.org/",
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "keywords": [
    "mysql",
    "mariadb",
    "sqlite",
    "postgresql",
    "postgres",
    "mssql",
    "orm",
    "nodejs",
    "object relational mapper"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.js": "eslint"
  },
  "main": "index.js",
  "maintainers": [
    {
      "name": "Sascha Depold",
      "email": "sascha@depold.com"
    },
    {
      "name": "Jan Aagaard Meier",
      "email": "janzeh@gmail.com"
    },
    {
      "name": "Daniel Durante",
      "email": "me@danieldurante.com"
    },
    {
      "name": "Mick Hansen",
      "email": "mick.kasper.hansen@gmail.com"
    },
    {
      "name": "Sushant Dhiman",
      "email": "sushantdhiman@outlook.com"
    }
  ],
  "name": "sequelize",
  "optionalDependencies": {},
  "options": {
    "env_cmd": "-f ./test/config/.docker.env"
  },
  "peerDependenciesMeta": {
    "pg": {
      "optional": true
    },
    "pg-hstore": {
      "optional": true
    },
    "mysql2": {
      "optional": true
    },
    "mariadb": {
      "optional": true
    },
    "sqlite3": {
      "optional": true
    },
    "tedious": {
      "optional": true
    }
  },
  "publishConfig": {
    "tag": "latest"
  },
  "readme": "# Sequelize\n\n[![npm version](https://badgen.net/npm/v/sequelize)](https://www.npmjs.com/package/sequelize)\n[![Travis Build Status](https://badgen.net/travis/sequelize/sequelize?icon=travis)](https://travis-ci.org/sequelize/sequelize)\n[![Appveyor Build Status](https://ci.appveyor.com/api/projects/status/9l1ypgwsp5ij46m3/branch/master?svg=true)](https://ci.appveyor.com/project/sushantdhiman/sequelize/branch/master)\n[![codecov](https://badgen.net/codecov/c/github/sequelize/sequelize/master?icon=codecov)](https://codecov.io/gh/sequelize/sequelize)\n[![npm downloads](https://badgen.net/npm/dm/sequelize)](https://www.npmjs.com/package/sequelize)\n[![Merged PRs](https://badgen.net/github/merged-prs/sequelize/sequelize)](https://github.com/sequelize/sequelize)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n\nSequelize is a promise-based Node.js ORM for Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server. It features solid transaction support, relations, eager and lazy loading, read replication and more. Sequelize follows [Semantic Versioning](http://semver.org).\n\nNew to Sequelize? Take a look at the [Tutorials and Guides](https://sequelize.org/master). You might also be interested in the [API Reference](https://sequelize.org/master/identifiers).\n\n### v6 Release\n\nYou can find detailed changelog [here](https://github.com/sequelize/sequelize/blob/master/docs/manual/other-topics/upgrade-to-v6.md).\n\n## Installation\n\n```sh\n$ npm i sequelize # This will install v6\n\n# And one of the following:\n$ npm i pg pg-hstore # Postgres\n$ npm i mysql2\n$ npm i mariadb\n$ npm i sqlite3\n$ npm i tedious # Microsoft SQL Server\n```\n\n## Documentation\n\n- [v6 Documentation](https://sequelize.org/master)\n- [v5/v4/v3 Documentation](https://sequelize.org)\n- [Contributing](https://github.com/sequelize/sequelize/blob/master/CONTRIBUTING.md)\n\n## Responsible disclosure\n\nIf you have security issues to report, please refer to our [Responsible Disclosure Policy](https://github.com/sequelize/sequelize/blob/master/SECURITY.md) for more details.\n\n## Resources\n\n- [Changelog](https://github.com/sequelize/sequelize/releases)\n- [Slack Inviter](http://sequelize-slack.herokuapp.com/)\n- [Stack Overflow](https://stackoverflow.com/questions/tagged/sequelize.js)\n\n### Tools\n\n- [CLI](https://github.com/sequelize/cli)\n- [With TypeScript](https://sequelize.org/master/manual/typescript.html)\n- [Enhanced TypeScript with decorators](https://github.com/RobinBuschmann/sequelize-typescript)\n- [For GraphQL](https://github.com/mickhansen/graphql-sequelize)\n- [For CockroachDB](https://github.com/cockroachdb/sequelize-cockroachdb)\n- [Plugins](https://sequelize.org/master/manual/resources.html)\n\n### Translations\n\n- [English](https://sequelize.org/master) (OFFICIAL)\n- [中文文档](https://github.com/demopark/sequelize-docs-Zh-CN) (UNOFFICIAL)\n",
  "readmeFilename": "README.md",
  "release": {
    "branches": [
      "v6"
    ],
    "verifyConditions": [
      "@semantic-release/npm",
      "@semantic-release/github"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sequelize/sequelize.git"
  },
  "scripts": {
    "cover": "rimraf coverage && npm run teaser && npm run cover-integration && npm run cover-unit && npm run merge-coverage",
    "cover-integration": "cross-env COVERAGE=true nyc --reporter=lcovonly mocha --require scripts/mocha-bootload -t 30000 --exit \"test/integration/**/*.test.js\" && node -e \"require('fs').renameSync('coverage/lcov.info', 'coverage/integration.info')\"",
    "cover-unit": "cross-env COVERAGE=true nyc --reporter=lcovonly mocha --require scripts/mocha-bootload -t 30000 --exit \"test/unit/**/*.test.js\" && node -e \"require('fs').renameSync('coverage/lcov.info', 'coverage/unit.info')\"",
    "docs": "rimraf esdoc && esdoc -c docs/esdoc-config.js && cp docs/favicon.ico esdoc/favicon.ico && cp docs/ROUTER.txt esdoc/ROUTER && node docs/run-docs-transforms.js && node docs/redirects/create-redirects.js && rimraf esdoc/file esdoc/source.html",
    "lint": "eslint lib test --quiet",
    "lint-docs": "markdownlint docs",
    "merge-coverage": "lcov-result-merger \"coverage/*.info\" \"coverage/lcov.info\"",
    "semantic-release": "semantic-release",
    "setup-mssql": "env-cmd $npm_package_options_env_cmd ./scripts/setup-mssql",
    "sscce": "env-cmd $npm_package_options_env_cmd node sscce.js",
    "sscce-mariadb": "cross-env DIALECT=mariadb npm run sscce",
    "sscce-mssql": "cross-env DIALECT=mssql npm run sscce",
    "sscce-mysql": "cross-env DIALECT=mysql npm run sscce",
    "sscce-postgres": "cross-env DIALECT=postgres npm run sscce",
    "sscce-sqlite": "cross-env DIALECT=sqlite npm run sscce",
    "teaser": "node scripts/teaser",
    "test": "npm run teaser && npm run test-unit && npm run test-integration",
    "test-all": "npm run test-mariadb && npm run test-mysql && npm run test-sqlite && npm run test-postgres && npm run test-postgres-native && npm run test-mssql",
    "test-docker": "npm run test-docker-unit && npm run test-docker-integration",
    "test-docker-integration": "env-cmd $npm_package_options_env_cmd npm run test-integration",
    "test-docker-unit": "npm run test-unit",
    "test-integration": "mocha --require scripts/mocha-bootload --globals setImmediate,clearImmediate --exit --check-leaks --colors -t 30000 --reporter spec \"test/integration/**/*.test.js\"",
    "test-integration-all": "npm run test-integration-mariadb && npm run test-integration-mysql && npm run test-integration-postgres && npm run test-integration-postgres-native && npm run test-integration-mssql && npm run test-integration-sqlite",
    "test-integration-mariadb": "cross-env DIALECT=mariadb npm run test-integration",
    "test-integration-mssql": "cross-env DIALECT=mssql npm run test-integration",
    "test-integration-mysql": "cross-env DIALECT=mysql npm run test-integration",
    "test-integration-postgres": "cross-env DIALECT=postgres npm run test-integration",
    "test-integration-postgres-native": "cross-env DIALECT=postgres-native npm run test-integration",
    "test-integration-sqlite": "cross-env DIALECT=sqlite npm run test-integration",
    "test-mariadb": "cross-env DIALECT=mariadb npm test",
    "test-mssql": "cross-env DIALECT=mssql npm test",
    "test-mysql": "cross-env DIALECT=mysql npm test",
    "test-pgsql": "npm run test-postgres",
    "test-postgres": "cross-env DIALECT=postgres npm test",
    "test-postgres-native": "cross-env DIALECT=postgres-native npm test",
    "test-postgresn": "npm run test-postgres-native",
    "test-sqlite": "cross-env DIALECT=sqlite npm test",
    "test-typings": "tsc -b types/tsconfig.json &&  dtslint --expectOnly types/test",
    "test-unit": "mocha --require scripts/mocha-bootload --globals setImmediate,clearImmediate --exit --check-leaks --colors -t 30000 --reporter spec \"test/unit/**/*.js\"",
    "test-unit-all": "npm run test-unit-mariadb && npm run test-unit-mysql && npm run test-unit-postgres && npm run test-unit-postgres-native && npm run test-unit-mssql && npm run test-unit-sqlite",
    "test-unit-mariadb": "cross-env DIALECT=mariadb npm run test-unit",
    "test-unit-mssql": "cross-env DIALECT=mssql npm run test-unit",
    "test-unit-mysql": "cross-env DIALECT=mysql npm run test-unit",
    "test-unit-postgres": "cross-env DIALECT=postgres npm run test-unit",
    "test-unit-postgres-native": "cross-env DIALECT=postgres-native npm run test-unit",
    "test-unit-sqlite": "cross-env DIALECT=sqlite npm run test-unit"
  },
  "types": "types",
  "version": "6.3.4"
}
